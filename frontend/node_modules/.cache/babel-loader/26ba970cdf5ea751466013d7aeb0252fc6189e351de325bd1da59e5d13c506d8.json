{"ast":null,"code":"var _jsxFileName = \"/Users/manasisawant/deploywatch/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box, Card, CardContent, Grid, Typography, Chip, CircularProgress } from '@mui/material';\nimport { format } from 'date-fns';\nimport { fetchDeployments } from '../store/deploymentsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusColors = {\n  queued: 'default',\n  'in-progress': 'primary',\n  successful: 'success',\n  failed: 'error'\n};\nfunction DeploymentCard({\n  deployment\n}) {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mb: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: deployment.appName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: deployment.status,\n              color: statusColors[deployment.status],\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: [\"Environment: \", deployment.environment]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: [\"Branch: \", deployment.branch]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: [\"Started: \", format(new Date(deployment.startedAt), 'PPpp')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), deployment.completedAt && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: [\"Completed: \", format(new Date(deployment.completedAt), 'PPpp')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = DeploymentCard;\nfunction Dashboard() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    items: deployments,\n    status,\n    error\n  } = useSelector(state => state.deployments);\n  useEffect(() => {\n    dispatch(fetchDeployments());\n    // Poll for updates every 30 seconds\n    const interval = setInterval(() => {\n      dispatch(fetchDeployments());\n    }, 30000);\n    return () => clearInterval(interval);\n  }, [dispatch]);\n  if (status === 'loading') {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"200px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n  if (status === 'failed') {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      align: \"center\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Deployment Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: deployments.map(deployment => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(DeploymentCard, {\n          deployment: deployment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, deployment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"EbL2nTjusWOn80W2S4z5KnC1PSo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"DeploymentCard\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Box","Card","CardContent","Grid","Typography","Chip","CircularProgress","format","fetchDeployments","jsxDEV","_jsxDEV","statusColors","queued","successful","failed","DeploymentCard","deployment","sx","mb","children","container","spacing","item","xs","display","justifyContent","alignItems","variant","appName","fileName","_jsxFileName","lineNumber","columnNumber","label","status","color","size","environment","branch","Date","startedAt","completedAt","_c","Dashboard","_s","dispatch","items","deployments","error","state","interval","setInterval","clearInterval","minHeight","align","gutterBottom","map","md","lg","id","_c2","$RefreshReg$"],"sources":["/Users/manasisawant/deploywatch/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  Chip,\n  CircularProgress,\n} from '@mui/material';\nimport { format } from 'date-fns';\nimport { fetchDeployments } from '../store/deploymentsSlice';\n\nconst statusColors = {\n  queued: 'default',\n  'in-progress': 'primary',\n  successful: 'success',\n  failed: 'error',\n};\n\nfunction DeploymentCard({ deployment }) {\n  return (\n    <Card sx={{ mb: 2 }}>\n      <CardContent>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n              <Typography variant=\"h6\">{deployment.appName}</Typography>\n              <Chip\n                label={deployment.status}\n                color={statusColors[deployment.status]}\n                size=\"small\"\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Environment: {deployment.environment}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Branch: {deployment.branch}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Started: {format(new Date(deployment.startedAt), 'PPpp')}\n            </Typography>\n          </Grid>\n          {deployment.completedAt && (\n            <Grid item xs={12}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Completed: {format(new Date(deployment.completedAt), 'PPpp')}\n              </Typography>\n            </Grid>\n          )}\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction Dashboard() {\n  const dispatch = useDispatch();\n  const { items: deployments, status, error } = useSelector((state) => state.deployments);\n\n  useEffect(() => {\n    dispatch(fetchDeployments());\n    // Poll for updates every 30 seconds\n    const interval = setInterval(() => {\n      dispatch(fetchDeployments());\n    }, 30000);\n    return () => clearInterval(interval);\n  }, [dispatch]);\n\n  if (status === 'loading') {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"200px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (status === 'failed') {\n    return (\n      <Typography color=\"error\" align=\"center\">\n        Error: {error}\n      </Typography>\n    );\n  }\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" gutterBottom>\n        Deployment Dashboard\n      </Typography>\n      <Grid container spacing={2}>\n        {deployments.map((deployment) => (\n          <Grid item xs={12} md={6} lg={4} key={deployment.id}>\n            <DeploymentCard deployment={deployment} />\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n}\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}